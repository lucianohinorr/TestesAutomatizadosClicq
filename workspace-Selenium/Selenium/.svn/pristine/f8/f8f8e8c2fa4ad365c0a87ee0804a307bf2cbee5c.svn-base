package TST_027_Cadastrar_Grupo_de_Usuarios_Regulares;


import org.junit.*;

import static org.junit.Assert.*;

import org.openqa.selenium.*;

import br.com.specto.arquivo.debug.LogDebug;
import br.com.specto.arquivo.test.result.LogTestResult;
import br.com.specto.auxiliar.MetodosAuxiliares;
import br.com.specto.entidades.GrupoUsuariosRegulares;


public class TST_027_04_ApagarGrupoUsuariosRegulares {
  
	private WebDriver driver;
	private StringBuffer verificationErrors = new StringBuffer();
	private GrupoUsuariosRegulares grupoUsuariosRegulares;
	private MetodosAuxiliares login;
	private LogDebug loggerDebug;
	private LogTestResult loggerTestResult;
	
	
	@Before
	public void setUp() throws Exception {
		
		this.grupoUsuariosRegulares = new GrupoUsuariosRegulares();
		this.login = new MetodosAuxiliares();
		this.loggerDebug = new LogDebug(this.getClass());
		this.loggerTestResult = new LogTestResult(this.getClass());
    
	}

	
	@Test
	public void apagarGrupoUsuariosRegularesVisact() throws Exception {
		
		loggerDebug.debug("Teste Iniciado");
		    
		try{
			
			driver = login.executaLoginManual();
        
			driver.findElement(By.id("mainMenu_ami0-header")).click();			
			driver.findElement(By.id("menuUserGroup_tmi0-title")).click();
			driver.findElement(By.linkText("Usuários Regulares")).click();
							
			//Recuperar o id do banco referente ao nome do Grupo
			String s_idGrupo = "" + grupoUsuariosRegulares.encontraIdGrupo(grupoUsuariosRegulares.getNomeParaEdicao(), "RegularUser");			
			
			//Marca o Ponto de Acesso para apagar.
			driver.findElement(By.id(s_idGrupo)).click();
      
			//Excluir o Ponto de Acesso
			driver.findElement(By.xpath("//*[ contains(@src, '/VisActAccessServer/themes/athena/img/delete.gif')]")).click();
    
			
    		//Tratando o Alerta
			Alert alert = driver.switchTo().alert();//Obtem o alerta aberto.
			alert.getText();//Obtem o texto do alerta.
    		alert.accept();//Equivalente ao click em OK no alerta.
   		
			driver.manage().window().maximize();
			
			//capturando a mensagem de validação após salvar o Grupo
			String msgRetornadaInterface = driver.findElement(By.xpath("//td[2]")).getText();
			String msgEsperada = "Grupo de Usuários [" + grupoUsuariosRegulares.getNomeParaEdicao() + "] removido com sucesso!";
 			
 			try{
				
 				//validando a mensagem de validação
    			assertEquals(msgEsperada, msgRetornadaInterface);
    			loggerTestResult.testResult("Aprovado");
				
			}catch (AssertionError erroValidaMensagemCadastroGrupoUsuariosRegulares){
    		
				loggerDebug.debug("Erro ao Executar o caso de Teste: " + erroValidaMensagemCadastroGrupoUsuariosRegulares);
    			loggerTestResult.testResult("Reprovado");
    			
    			//Avisa a api junit sobre o erro no caso de teste
    			throw erroValidaMensagemCadastroGrupoUsuariosRegulares;
		
    	
    		}finally{
    
				//fechar a tela de cadastro do Grupo
				driver.findElement(By.xpath("//*[contains(@title, 'Fechar')]")).click();
				
				//Botão sair so encontrado desta forma.
				driver.findElement(By.xpath("//*[ contains(@value, 'Sair')]")).click();
				
				loggerDebug.debug("Teste Finalizado");
				
			}
			
		}catch(Exception erro){
			
			loggerDebug.debug("Erro ao Executar o cado de Teste: " + erro);
			loggerTestResult.testResult("Reprovado");
			loggerDebug.debug("Teste Finalizado");
			
			//Avisa a api junit sobre o erro no caso de teste
			throw erro;
			
		}
	}
	

	@After
	public void tearDown() throws Exception {
		
		driver.quit();
		String verificationErrorString = verificationErrors.toString();
		
		if (!"".equals(verificationErrorString)) {
			
			fail(verificationErrorString);
		}
	}
	
}
