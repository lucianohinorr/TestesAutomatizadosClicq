package TST_018_Cadastrar_Grupo_de_Ambiente;


import org.junit.*;

import static org.junit.Assert.*;

import org.openqa.selenium.*;

import br.com.specto.arquivo.debug.LogDebug;
import br.com.specto.arquivo.test.result.LogTestResult;
import br.com.specto.auxiliar.MetodosAuxiliares;
import br.com.specto.entidades.GrupoDeAmbiente;


public class TST_018_02_EditarGrupoDeAmbiente {
 
	private WebDriver driver;
	private StringBuffer verificationErrors = new StringBuffer();
	private GrupoDeAmbiente grupoDeAmbiente;
	private MetodosAuxiliares login;
	private LogDebug loggerDebug;
	private LogTestResult loggerTestResult;

	
	@Before
	public void setUp() throws Exception {
	  
		this.grupoDeAmbiente = new GrupoDeAmbiente();
		this.login = new MetodosAuxiliares();    
		this.loggerDebug = new LogDebug(this.getClass());
		this.loggerTestResult = new LogTestResult(this.getClass());
    
	}

	
	@Test
	public void editarGrupoDeAmbienteVisact() throws Exception {
		
		loggerDebug.debug("Teste Iniciado");
    
		try{
		
			driver = login.executaLoginManual();
	
			driver.findElement(By.id("mainMenu_ami0-header")).click();
			driver.findElement(By.id("menuLocalities_tmi0-title")).click();
			driver.findElement(By.linkText("Grupo de Ambientes")).click();
       
			//Recuperar o id do banco referente ao nome do Grupo de Ambiente cadastrada atualmente no banco
			String s_idGrupoDeAmbiente = "" + grupoDeAmbiente.encontraIdGrupoDeAmbiente(grupoDeAmbiente.getNomeGrupoAmbiente());
		    
			//Muda de página para que o ambiente Serviços seja exibido
			//driver.findElement(By.xpath("//*[ contains(@src, '/VisActAccessServer/themes/athena/img/jmesa/nextPage.gif')]")).click();
			
			//Marca o Grupo de Ambiente para editar.
			driver.findElement(By.id(s_idGrupoDeAmbiente)).click();
				
		    //Abrindo a tela para edição
			driver.findElement(By.xpath("//*[ contains(@src, '/VisActAccessServer/themes/athena/img/edit.gif')]")).click();
			
			//limpando o campo Nome do Grupo de Ambiente para inserção de novo valor
			driver.findElement(By.xpath("//*[ contains(@name, 'name')]")).clear();
			
			//Inserindo os dados para a Edição do Grupo de Ambiente
			driver.findElement(By.xpath("//*[ contains(@name, 'name')]")).sendKeys(grupoDeAmbiente.getNomeGrupoAmbienteParaEdicao());
			
			//Botão Salvar do cadastro de Grupo de Ambiente
			driver.findElement(By.xpath("//*[ contains(@title, 'Salvar')]")).click();
					
			//capturando a mensagem de validação após salvar o Grupo
			String msgRetornadaInterface = driver.findElement(By.xpath("/html/body/div[3]/div[6]/div[3]/div[2]/div/table/tbody/tr/td[2]")).getText();
 			String msgEsperada = "Grupo de Ambiente [" + grupoDeAmbiente.getNomeGrupoAmbienteParaEdicao() + "] editado com sucesso!";
		
			
			try{
    			
				//validando a mensagem de validação
				assertEquals(msgEsperada, msgRetornadaInterface);	
				loggerTestResult.testResult("Aprovado");
			
    		}catch (AssertionError erroValidaMensagemEdicaoAmbiente){
    		
    			loggerDebug.debug("Erro ao Executar o caso de Teste: " + erroValidaMensagemEdicaoAmbiente);
    			loggerTestResult.testResult("Reprovado");
    			
    			
				
    		}finally{
			
 				//fechar a tela de cadastro do ambiente
				driver.findElement(By.xpath("//*[contains(@title, 'Fechar')]")).click();
				
				//fechando a janela da lista de ambientes cadastrados pelo imagem. 
				driver.findElement(By.xpath("//*[ contains(@src, '/VisActAccessServer/themes/athena/img/close.gif')]")).click();
		 
				//se não me engano botão sair da aplicação
				driver.findElement(By.cssSelector("input[type=\"button\"]")).click();
				
				loggerDebug.debug("Teste Finalizado");
		
    		}
			
		}catch (Exception erroConsultaIdAmbiente){
			
			loggerDebug.debug("Erro ao Executar o caso de Teste: " + erroConsultaIdAmbiente);
			loggerTestResult.testResult("Reprovado");
			loggerDebug.debug("Teste Finalizado");			

		}
    
	}
  

	@After
	public void tearDown() throws Exception {
		
		driver.quit();
		String verificationErrorString = verificationErrors.toString();
		
		if (!"".equals(verificationErrorString)) {
			fail(verificationErrorString);
		}
	}

 }
