package TST_076_Cadastrar_Tipo_de_Cartao;


import org.junit.*;

import static org.junit.Assert.*;

import org.openqa.selenium.*;

import br.com.specto.arquivo.debug.LogDebug;
import br.com.specto.arquivo.test.result.LogTestResult;
import br.com.specto.auxiliar.MetodosAuxiliares;
import br.com.specto.entidades.TipoDeCartao;

public class TST_076_16_EditarTipodeCartao {
 
	private WebDriver driver;
	private StringBuffer verificationErrors = new StringBuffer();
	private TipoDeCartao tipoDeCartao;	
	private MetodosAuxiliares login;
	private LogDebug loggerDebug;
	private LogTestResult loggerTestResult;

	
	@Before
	public void setUp() throws Exception {
	  
		this.tipoDeCartao = new TipoDeCartao();
		this.login = new MetodosAuxiliares();    
		this.loggerDebug = new LogDebug(this.getClass());
		this.loggerTestResult = new LogTestResult(this.getClass());
    
	}

	@Test
	public void editarTipoDeCartaoVisact() throws Exception {
		
		loggerDebug.debug("Teste Iniciado");
    
		try{
		
			driver = login.executaLoginManual();
	
			driver.findElement(By.id("mainMenu_ami0-header")).click();
			driver.findElement(By.id("menuCards_tmi0-title")).click();
			driver.findElement(By.linkText("Tipos de Cartões")).click();
       
			//Recuperar o id no banco referente ao nome do Tipo de Cartão recem editada
			String s_idTipoDeCartao = "" + tipoDeCartao.encontraIdTipoDeCartao(tipoDeCartao.getNomeTipoCartao());
		    
			//Marca o Tipo de Cartão para ser editado
			driver.findElement(By.id(s_idTipoDeCartao)).click();
     		
		    //Abrindo a tela para edição
			//driver.findElement(By.xpath("//*[ contains(@title, 'Editar')]")).click();
			driver.findElement(By.xpath("//*[ contains(@src, '/VisActAccessServer/themes/athena/img/edit.gif')]")).click();
			
			//Edição do campo Nome do cadastro do tipo de cartão
			driver.findElement(By.xpath("//*[ contains(@name, 'name')]")).clear();
			driver.findElement(By.xpath("//*[ contains(@name, 'name')]")).sendKeys(tipoDeCartao.getNomeParaEdicao());
			
			//Botão Salvar do cadastro de região
			driver.findElement(By.xpath("//*[ contains(@title, 'Salvar')]")).click();
			
			//capturando a mensagem de validação após salvar o Grupo
			String msgRetornadaInterface = driver.findElement(By.xpath("/html/body/div[3]/div[6]/div[3]/div[2]/div/table/tbody/tr/td[2]")).getText();
 			String msgEsperada = "Tipo de cartão [" + tipoDeCartao.getNomeParaEdicao() + "] editado com sucesso!";
			
			try{
    			
				//validando a mensagem 
				assertEquals(msgEsperada, msgRetornadaInterface);
    			loggerTestResult.testResult("Aprovado");
        		
    		}catch (AssertionError erroValidaMensagemExclusaoTipoDeCartao){
    		
    			loggerDebug.debug("Erro ao Executar o caso de Teste: " + erroValidaMensagemExclusaoTipoDeCartao);
    			loggerTestResult.testResult("Reprovado");
    		
    			//Avisa a api junit sobre o erro no caso de teste
    			throw erroValidaMensagemExclusaoTipoDeCartao;
    			
    		}finally{
			
 				//fechar a tela de edição de Tipo de CArtão
				driver.findElement(By.xpath("//*[contains(@title, 'Fechar')]")).click();
				
				//espera de 5 segundo, assim dá tempo de debugar a mensagem
				Long end = System.currentTimeMillis() + 3000;
				while (System.currentTimeMillis() < end) {}    
	    
				//fechando a janela da lista dos Tipos de Cartões pelo imagem. 
				driver.findElement(By.xpath("//*[ contains(@src, '/VisActAccessServer/themes/athena/img/close.gif')]")).click();
		 
				//se não me engano botão sair da aplicação
				driver.findElement(By.cssSelector("input[type=\"button\"]")).click();
				
				loggerDebug.debug("Teste Finalizado");
		
    		}
			
		}catch (Exception erro){
			
			loggerDebug.debug("Erro ao Executar o caso de Teste: " + erro);
			loggerTestResult.testResult("Reprovado");
		
		}
    
	}
  

	@After
	public void tearDown() throws Exception {
		
		driver.quit();
		String verificationErrorString = verificationErrors.toString();
		
		if (!"".equals(verificationErrorString)) {
			fail(verificationErrorString);
		}
	}

 }
