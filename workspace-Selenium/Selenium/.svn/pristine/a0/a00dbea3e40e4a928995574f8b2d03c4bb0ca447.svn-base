package CadastroRegiao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import org.junit.*;
import static org.junit.Assert.*;
import org.openqa.selenium.*;
import br.com.specto.auxiliar.MetodosAuxiliares;
import br.com.specto.daoMysql.MYSQLConnection;


public class ApagarRegiao{
 
	private  WebDriver driver;
	private boolean acceptNextAlert = true;
	private StringBuffer verificationErrors = new StringBuffer();
 
	private Connection connection;//conexão com banco
	private final String NOME_REGIAO = "Luciano_teste";



	@Before
	public void setUp() throws Exception {
	  
	  
		this.connection = new MYSQLConnection().getConnection();//conexão com banco
		
		//driver = new FirefoxDriver();		  
		//baseUrl = "http://10.10.1.3:8888/VisActAccessServer/";
		//driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
    
	}

	@Test
	public void apagaRegiaoVisact() throws Exception {
		
		System.out.println("Iniciando o teste para a exclusão de Região");
    
		//driver.get(baseUrl);
		
		try{
		
			System.out.println("Executando Login Manual");
			
			MetodosAuxiliares login = new MetodosAuxiliares();
			
			driver = login.executaLoginManual();
	
			//Login Manual
			/*driver.findElement(By.name("j_username")).sendKeys("admin");
			driver.findElement(By.name("j_password")).sendKeys("111111");
			driver.findElement(By.name("submit")).click();
			*/
    
			//Login Automático
			//driver.findElement(By.id("VA_server")).click();

    		driver.findElement(By.id("mainMenu_ami0-header")).click();
			driver.findElement(By.id("menuLocalities_tmi0-title")).click();
			driver.findElement(By.linkText("Região")).click();
       
    		System.out.println("Buscando Id da Região");
   
			//Recuperar o id do banco referente ao nome da região
			String s_idRegiao = "" + encontraIdRegiao();
    
			//Marca Região para deletar.
			driver.findElement(By.id(s_idRegiao)).click();
      
			System.out.println("Região " + NOME_REGIAO + " marcada para Exclusão");
    
			//Excluir a Região
			driver.findElement(By.xpath("//*[ contains(@src, '/VisActAccessServer/themes/athena/img/delete.gif')]")).click();
    
    		//**** Tratando o Alerta
   
    		//Obtem o alerta aberto.
			Alert alert = driver.switchTo().alert();
    
			//Obtem o texto do alerta. 
			alert.getText();
    
			//Posso validar a mensagem do alerta
			//assertTrue(driver.switchTo().alert().getText().equals("Deseja realmente executar esta operação?"));
    
			//Equivalente ao click em OK no alerta.
			alert.accept();
    
			//****
    
    		System.out.println("Região " + NOME_REGIAO + " Deletada!");
    
			//Capturando a mensagem de validação após Região se deletada
			String msgValidacaoDeletarRegiao = driver.findElement(By.xpath("/html/body/div[3]/div[6]/div[2]/div[2]/div/table/tbody/tr/td[2]")).getText();
    
    		System.out.println("Validando Mensagem!");
    		
    		
    		try{
    			
    			//validando a mensagem de validação
    			assertEquals("Região [Luciano_teste] removida com sucesso!", msgValidacaoDeletarRegiao);
    			
    			System.out.println("Mensagem Validada!");
        		
    		}
    		
    		catch (AssertionError e){
    			
    			/*
    			 * a string abaixo é exibida na classe TestRun
    			 * System.out.println(failure.toString());
    			 */
    			
    			fail("Mensagem não Validade!");
        		
    		}
    
		
			//Fechar a tela com a lista de Regiões.
			driver.findElement(By.xpath("//*[contains(@title, 'Fechar')]")).click();
			//Tambem funciona: driver.findElement(By.xpath("//*[ contains(@src, '/VisActAccessServer/themes/athena/img/close.gif')]")).click();
    
			System.out.println("Tela com a lista de regiões Fechada!");
    
			//Sleep. Para Debug.
			Long end = System.currentTimeMillis() + 3000;
			while (System.currentTimeMillis() < end) {}  
    
			System.out.println("Fechando a Aplicação");
    
			//Selecionando o botão Sair da Aplicação.
			driver.findElement(By.cssSelector("input[type=\"button\"]")).click();
    
			System.out.println("Aplicação Fechada!");
    
		}
		catch (Exception erro){
			
			System.out.println("Erro no caso de Teste 'Apagar Região Não Cadastrada' : " + erro);
		
		}
    
	}
  
  
	//Recupera o Id da Região.
	//select no banco select REGI_PK_ID from VISACT.VA_REGI_REGION where REGI_NM_NAME LIKE 'teste';
	public int encontraIdRegiao() throws SQLException{
	  
		System.out.println("Metodo: encontraIdRegiao");
	  	
		StringBuilder sql = new StringBuilder();
		
		sql.append("SELECT REGI_PK_ID ");
		sql.append("FROM   VA_REGI_REGION ");
		sql.append("WHERE  REGI_NM_NAME = ? ");
				
		PreparedStatement ps = connection.prepareStatement(sql.toString());
		
		ps.setString(1, NOME_REGIAO);
		ResultSet rs = ps.executeQuery();
		int idRegiao = 0;
		
		try{
			if(rs.next()){
				idRegiao = rs.getInt(1);
				System.out.println("Id da Regiao Encontrado");
			}
			else{
				throw new SQLException("A Região " + NOME_REGIAO + " não está cadastrada no banco");
			}
			
		}
		finally{
			rs.close();
			ps.close();
		}
		
		return idRegiao;
	}

	@After
	public void tearDown() throws Exception {
		driver.quit();
		String verificationErrorString = verificationErrors.toString();
		if (!"".equals(verificationErrorString)) {
			fail(verificationErrorString);
		}
	}

 	
	private boolean isElementPresent(By by) {
 		try {
 			driver.findElement(by);
 			return true;
 		} 
 		catch (NoSuchElementException e) {
 			return false;
 		}
 	}

 	private boolean isAlertPresent() {
 		try {
 			driver.switchTo().alert();
 			return true;
 		}
 		catch (NoAlertPresentException e) {
 			return false;
 		}
 	}

 	private String closeAlertAndGetItsText() {
 		try {
 			Alert alert = driver.switchTo().alert();
 			String alertText = alert.getText();
 			if (acceptNextAlert) {
 				alert.accept();
 			} else {
 				alert.dismiss();
 			}
 			return alertText;
 		} 
 		finally {
 			acceptNextAlert = true;
 		}
 	}
}
