package TST_024_Cadastrar_Veículo;


import org.junit.*;
import static org.junit.Assert.*;
import org.openqa.selenium.*;
import br.com.specto.arquivo.debug.LogDebug;
import br.com.specto.arquivo.test.result.LogTestResult;
import br.com.specto.auxiliar.MetodosAuxiliares;
import br.com.specto.entidades.Veiculo;


public class TST_024_02_CadastrarVeículoComCartão {

	private WebDriver driver;
	private StringBuffer verificationErrors = new StringBuffer();
	private Veiculo veiculo;
	private MetodosAuxiliares login;
	private LogDebug loggerDebug;
	private LogTestResult loggerTestResult;


	@Before
	public void setUp() throws Exception {

		this.veiculo = new Veiculo();
		this.login = new MetodosAuxiliares();
		this.loggerDebug = new LogDebug(this.getClass());
		this.loggerTestResult = new LogTestResult(this.getClass());

	}


	@Test
	public void cadastrarVeiculoVisact() throws Exception {

		loggerDebug.debug("Teste Iniciado");

		try{

			driver = login.executaLoginManual();

			//seleciona opção Cadastro no menu
			driver.findElement(By.id("mainMenu_ami0-header")).click();

			//seleciona opção Veiculos do menu
			driver.findElement(By.id("menuVehicles_tmi0-title")).click();

			//seleciona a opção Veículo
			driver.findElement(By.linkText("Veículo")).click();

			//abre a tela para cadastro de Veículo
			driver.findElement(By.xpath("//*[ contains(@title, 'Incluir')]")).click();

			//Inserindo os dados para o cadastro de região
			driver.findElement(By.xpath("//*[ contains(@name, 'licensePlate')]")).sendKeys(veiculo.getPlaca());
			driver.findElement(By.xpath("//*[ contains(@name, 'manufacturer')]")).sendKeys(veiculo.getFabricante());
			driver.findElement(By.xpath("//*[ contains(@name, 'model')]")).sendKeys(veiculo.getModelo());
			driver.findElement(By.xpath("//*[ contains(@name, 'color')]")).sendKeys(veiculo.getCor());
			driver.findElement(By.xpath("//*[ contains(@name, 'year')]")).sendKeys(veiculo.getAno_Fabricacao());

			//Seleciona a aba cartão
			driver.findElement(By.linkText("Cartão")).click();

			//Selecionar o cartão 1000000000
			driver.findElement(By.id("108")).click();

			//Associar cartão ao Veículo
			driver.findElement(By.name("associateCard")).click();

			//Botão Salvar do cadastro de Veículo
			driver.findElement(By.xpath("//*[ contains(@title, 'Salvar')]")).click();

			//capturando a mensagem de validação após salvar o Grupo
			String msgRetornadaInterface = driver.findElement(By.xpath("/html/body/div[3]/div[6]/div[3]/div[2]/div/table/tbody/tr/td[2]")).getText();
			String msgEsperada = "Veículo [" + veiculo.getPlaca() + "] salvo com sucesso!";

			try{

				//validando a mensagem
				assertEquals(msgEsperada, msgRetornadaInterface);	    
				loggerTestResult.testResult("Aprovado");

			}catch (AssertionError erroValidaMensagemCadastroVeiculo){

				loggerDebug.debug("Erro ao Executar o caso de Teste: " + erroValidaMensagemCadastroVeiculo);
				loggerTestResult.testResult("Reprovado");
				
				//Avisa a api junit sobre o erro no caso de teste
    			throw erroValidaMensagemCadastroVeiculo;

			} finally{
				
				driver.manage().window().maximize();

				//fechar a tela de cadastro de Veículos
				driver.findElement(By.xpath("//*[contains(@title, 'Fechar')]")).click();

				//fechando a janela da lista de Veículos. 
				driver.findElement(By.xpath("//*[contains(@title, 'Fechar')]")).click();

				//Selecionando o botão Sair da Aplicação.
				driver.findElement(By.cssSelector("input[type=\"button\"]")).click();
				
				loggerDebug.debug("Teste Finalizado");
			}

		} catch(Exception erro){

			loggerDebug.debug("Erro ao Executar o caso de Teste: " + erro);
			loggerTestResult.testResult("Reprovado");
		}
	}


	@After
	public void tearDownTest() throws Exception {

		driver.quit();
		String verificationErrorString = verificationErrors.toString();

		if (!"".equals(verificationErrorString)) {

			fail(verificationErrorString);
		}

	}

}
