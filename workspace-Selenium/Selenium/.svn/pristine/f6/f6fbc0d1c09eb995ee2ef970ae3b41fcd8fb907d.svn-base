package CadastroRegiao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.regex.Pattern;
import java.util.concurrent.TimeUnit;

import org.junit.*;

import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.*;

import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.Select;

import br.com.specto.daoMysql.MYSQLConnection;

import com.thoughtworks.selenium.Selenium;

public class EditarRegiao {
 
	private WebDriver driver;
	private String baseUrl;
	private boolean acceptNextAlert = true;
	private StringBuffer verificationErrors = new StringBuffer();
 
	private Connection connection;//conexão com banco
	private final String NOME_REGIAO = "Luciano_teste";
	private final String NOVO_NOME_REGIAO = "Gabriel_teste";



	@Before
	public void setUp() throws Exception {
	  
	  
		this.connection = new MYSQLConnection().getConnection();//conexão com banco
		
		driver = new FirefoxDriver();
		  
		baseUrl = "http://10.10.1.3:8080/VisActAccessServer/";
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
    
	}

	@Test
	public void editarRegiaoVisact() throws Exception {
		
		System.out.println("Iniciando o teste para edição de Região");
    
		driver.get(baseUrl);
		
		try{
		
			System.out.println("Executando Login Manual");
	
			//Login Manual
			driver.findElement(By.name("j_username")).sendKeys("admin");
			driver.findElement(By.name("j_password")).sendKeys("111111");
			driver.findElement(By.name("submit")).click();
    
			//Login Automático
			//driver.findElement(By.id("VA_server")).click();

    		driver.findElement(By.id("mainMenu_ami0-header")).click();
			driver.findElement(By.id("menuLocalities_tmi0-title")).click();
			driver.findElement(By.linkText("Região")).click();
       
    		System.out.println("Buscando Id da Região");
   
			//Recuperar o id do banco referente ao nome da região
			String s_idRegiao = "" + encontraIdRegiao();
			
		    
			//Marca Região para editar.
			driver.findElement(By.id(s_idRegiao)).click();
      
			System.out.println("Região " + NOME_REGIAO + " marcada para Edição");
			
			
			System.out.println("Abrindo Tela para edição de Região");
			
		    //Abrindo a tela para edição
			//driver.findElement(By.xpath("//*[ contains(@title, 'Editar')]")).click();
			driver.findElement(By.xpath("//*[ contains(@src, '/VisActAccessServer/themes/athena/img/edit.gif')]")).click();
			
			
			//limpando o campo Nome da Região para inserção de novo valor
			driver.findElement(By.xpath("//*[ contains(@name, 'name')]")).clear();
			
			
			//Inserindo os dados para o cadastro de região
			driver.findElement(By.xpath("//*[ contains(@name, 'name')]")).sendKeys(NOVO_NOME_REGIAO);
			
			
			//Botão Salvar do cadastro de região
			driver.findElement(By.xpath("//*[ contains(@title, 'Salvar')]")).click();
			
			System.out.println("Cadastro de Região Salvo");    
    
			//capturando a mensagem de validação após salvar a região
			String msgValidacaoCadRegiao = driver.findElement(By.xpath("/html/body/div[3]/div[6]/div[3]/div[2]/div/table/tbody/tr/td[2]")).getText();
  
			System.out.println("Validando Mensagem!");
						
			//validando a mensagem de validação
			assertEquals("Região [Gabriel_teste] editada com sucesso!", msgValidacaoCadRegiao);
    
			System.out.println("Mensagem Validada!");
    
			//espera de 5 segundo, assim dá tempo de debugar a mensagem
			Long end = System.currentTimeMillis() + 5000;
			 
    
			//fechar a tela de cadastro da região
			driver.findElement(By.xpath("//*[contains(@title, 'Fechar')]")).click();
			
			System.out.println("Tela de cadastro da Região Fechada!");
    
    
			//espera de 5 segundo, assim dá tempo de debugar a mensagem
			end = System.currentTimeMillis() + 3000;
			while (System.currentTimeMillis() < end) {
				//WebElement resultsDiv = driver.findElement(By.className("gssb_e"));
				//elemento_menu_cadastro = driver.findElement(By.id("mainMenu_ami0-header"));
     	
				// If results have been returned, the results are displayed in a drop down.
				//if (elemento_menu_cadastro.isDisplayed()) {
				//break;
				//}
			}    
    
			//fechando a janela da lista de regiões pelo imagem. 
			driver.findElement(By.xpath("//*[ contains(@src, '/VisActAccessServer/themes/athena/img/close.gif')]")).click();
			
			System.out.println("Tela com a lista de regiões Fechada!");
			
			System.out.println("Fechando a Aplicação");
     
			//se não me engano botão sair da aplicação
			driver.findElement(By.cssSelector("input[type=\"button\"]")).click();
			
			System.out.println("Aplicação Fechada!");
    
    
		}
		catch (Exception erro){
			
			System.out.println("Erro no caso de Teste 'Editar Região' : " + erro);
		
		}
    
	}
  
  
	//Recupera o Id da Região.
	//select no banco select REGI_PK_ID from VISACT.VA_REGI_REGION where REGI_NM_NAME LIKE 'teste';
	public int encontraIdRegiao() throws SQLException{
	  
		System.out.println("Metodo: encontraIdRegiao");
	  	
		StringBuilder sql = new StringBuilder();
		
		sql.append("SELECT REGI_PK_ID ");
		sql.append("FROM   VA_REGI_REGION ");
		sql.append("WHERE  REGI_NM_NAME = ? ");
				
		PreparedStatement ps = connection.prepareStatement(sql.toString());
		
		ps.setString(1, NOME_REGIAO);
		ResultSet rs = ps.executeQuery();
		int idRegiao = 0;
		
		try{
			if(rs.next()){
				idRegiao = rs.getInt(1);
				System.out.println("Id da Regiao Encontrado");
			}
			else{
				throw new SQLException("A Região " + NOME_REGIAO + " não está cadastrada no banco");
			}
			
		}
		finally{
			rs.close();
			ps.close();
		}
		
		return idRegiao;
	}

	@After
	public void tearDown() throws Exception {
		driver.quit();
		String verificationErrorString = verificationErrors.toString();
		if (!"".equals(verificationErrorString)) {
			fail(verificationErrorString);
		}
	}

 	private boolean isElementPresent(By by) {
 		try {
 			driver.findElement(by);
 			return true;
 		} 
 		catch (NoSuchElementException e) {
 			return false;
 		}
 	}

 	private boolean isAlertPresent() {
 		try {
 			driver.switchTo().alert();
 			return true;
 		}
 		catch (NoAlertPresentException e) {
 			return false;
 		}
 	}

 	private String closeAlertAndGetItsText() {
 		try {
 			Alert alert = driver.switchTo().alert();
 			String alertText = alert.getText();
 			if (acceptNextAlert) {
 				alert.accept();
 			} else {
 				alert.dismiss();
 			}
 			return alertText;
 		} 
 		finally {
 			acceptNextAlert = true;
 		}
 	}
}
