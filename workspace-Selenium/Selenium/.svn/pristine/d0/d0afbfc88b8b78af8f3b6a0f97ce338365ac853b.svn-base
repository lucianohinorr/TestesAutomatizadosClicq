package TST_032_Cadastrar_Grade_de_Horario;


import org.junit.*;

import static org.junit.Assert.*;

import org.openqa.selenium.*;

import br.com.specto.arquivo.debug.LogDebug;
import br.com.specto.arquivo.test.result.LogTestResult;
import br.com.specto.auxiliar.MetodosAuxiliares;
import br.com.specto.entidades.GradeHorario;

public class TST_032_01_CadastrarGradeHorario {
  
	private WebDriver driver;
	private StringBuffer verificationErrors = new StringBuffer();
	private GradeHorario gradeHorario;
	private MetodosAuxiliares login;
	private LogDebug loggerDebug;
	private LogTestResult loggerTestResult;
		
	
	@Before
	public void setUp() throws Exception {
		
		this.gradeHorario = new GradeHorario();
		this.login = new MetodosAuxiliares();
		this.loggerDebug = new LogDebug(this.getClass());
		this.loggerTestResult = new LogTestResult(this.getClass());
    
	}

	
	@Test
	public void cadastrarTipoDeCartao() throws Exception {
		
		loggerDebug.debug("Teste Iniciado");		
		    
		try{
			
			driver = login.executaLoginManual();
        
			driver.findElement(By.id("mainMenu_ami0-header")).click();			
			driver.findElement(By.id("menuSchedule_tmi0-title")).click();
			driver.findElement(By.linkText("Grade de Horário")).click();
			   
			driver.findElement(By.xpath("//*[ contains(@title, 'Incluir')]")).click();

			//Inserindo os dados para o cadastro de Grade de Horario
			driver.findElement(By.xpath("//*[ contains(@name, 'name')]")).sendKeys(gradeHorario.getNome());	
			
			driver.findElement(By.id("weekday_1")).click();
			driver.findElement(By.id("weekday_7")).click();
			
			driver.findElement(By.xpath("//*[ contains(@name, 'initialHour')]")).sendKeys(gradeHorario.getHoraInicial());
			driver.findElement(By.xpath("//*[ contains(@name, 'finalHour')]")).sendKeys(gradeHorario.getHoraFinal());
						
			//Depois de escolhido a opção tipo de cartão, por algum motivo a tela é redimensionada escondendo alguns ícones 
			//Desta forma maximizo a janela, fazendo com que os botões apareçam. Mas nem todos aparecem, como por exemplo o botão Sair da aplicação
			//driver.manage().window().maximize();
			
			driver.findElement(By.xpath("//*[ contains(@value, 'Adicionar')]")).click();
			
			//Botão Salvar do cadastro Grade de Horario
			driver.findElement(By.xpath("//*[ contains(@title, 'Salvar')]")).click();
			
			//espera de 3 segundo, assim dá tempo de debugar a mensagem
			long  end = System.currentTimeMillis() + 3000;
			while (System.currentTimeMillis() < end) {}    
    								   
			
			//capturando a mensagem de validação após salvar o Grupo
			String msgRetornadaInterface = driver.findElement(By.xpath("/html/body/div[3]/div[6]/div[3]/div[2]/div/table/tbody/tr/td[2]")).getText();
 			String msgEsperada = "Grade de horário [" + gradeHorario.getNome() + "] salva com sucesso!";
			
			try{
				
				//validando a mensagem
				assertEquals(msgEsperada, msgRetornadaInterface);	
				loggerTestResult.testResult("Aprovado");
				
			}catch (AssertionError erroValidaMensagemCadastroGradeHorario){
    		
				loggerDebug.debug("Erro ao Executar o caso de Teste: " + erroValidaMensagemCadastroGradeHorario);
    			loggerTestResult.testResult("Reprovado");
    			
    			//Avisa a api junit sobre o erro no caso de teste
    			throw erroValidaMensagemCadastroGradeHorario;
    	
    		}finally{
    
				//fechar a tela de cadastro de Tipo de Cartão    			
    			driver.findElement(By.xpath("//*[contains(@title, 'Fechar')]")).click();
    			
    			//fechando a janela da lista de Tipo de Cartões. 
				driver.findElement(By.xpath("//*[contains(@title, 'Fechar')]")).click();
								
				//Selecionando o botão Sair da Aplicação.
				//Botão Sair está ficando escondido
				//driver.findElement(By.cssSelector("input[type=\"button\"]")).click();
				//Desta forma utilizo o comando abaixo
				driver.close();
				
				loggerDebug.debug("Teste Finalizado");
			
			}
			
		}catch(Exception erro){
			
			loggerDebug.debug("Erro ao Executar o caso de Teste: " + erro);
			loggerTestResult.testResult("Reprovado");
			loggerDebug.debug("Teste Finalizado");			
			
		}
	}
	

	@After
	public void tearDown() throws Exception {
		
		driver.quit();
		String verificationErrorString = verificationErrors.toString();
		
		if (!"".equals(verificationErrorString)) {
			
			fail(verificationErrorString);
		}
	}
	
}
